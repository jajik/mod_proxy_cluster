name: CI
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
jobs:
  cmake-fedora-latest:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc, clang]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: mod_proxy_cluster
      - name: Setup Podman
        run: |
          sudo apt update
          sudo apt-get -y install podman
          podman pull fedora:38
      - name: Create container and build
        run: |
          {
              echo 'FROM fedora:38'
              echo 'RUN dnf install cmake httpd-devel ${{ matrix.compiler }} -y'
              echo 'RUN dnf groupinstall "C Development Tools and Libraries" -y'
              echo 'RUN dnf clean all'
              echo 'COPY mod_proxy_cluster mod_proxy_cluster'
              echo 'WORKDIR /mod_proxy_cluster/native'
              echo 'RUN cmake . -DCMAKE_C_COMPILER=${{ matrix.compiler }}'
              echo 'RUN make'
          } > podmanfile
          podman build -f ./podmanfile
    name: cmake-fedora-latest
  make-fedora-latest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: mod_proxy_cluster
      - name: Setup Podman
        run: |
          sudo apt update
          sudo apt-get -y install podman
          podman pull fedora:38
      - name: Create container and build
        run: |
          {
              echo 'FROM fedora:38'
              echo 'RUN dnf install httpd-devel redhat-rpm-config -y'
              echo 'RUN dnf groupinstall "C Development Tools and Libraries" -y'
              echo 'RUN dnf clean all'
              echo 'COPY mod_proxy_cluster mod_proxy_cluster'
              echo 'WORKDIR /mod_proxy_cluster/native'
              echo 'RUN \'
              echo 'for module in advertise/ mod_*; do \'
              echo '  echo Building: $module; \'
              echo '  cd $module; \'
              echo '  sh buildconf; \'
              echo '  ./configure --with-apxs=$APACHE_DIR/bin/apxs; \'
              # Ensure the build fails in case of a failure in any of the module builds!
              echo '  make || exit 1; \'
              echo '  cd ..; \'
              echo 'done;'
          } > podmanfile
          podman build -f ./podmanfile
  clang-format-style-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: mod_proxy_cluster
      - name: Install clang-format
        run: |
          sudo apt update
          sudo apt-get -y install clang-format
      - name: Check styles
        run: |
          code=0
          cd mod_proxy_cluster/native
          for file in */*.c */*.h; do
            clang-format $file -n &> diff.txt;
            if [ ! -s diff.txt ]; then
              printf "%-42s ... OK\n" $file
            else
              cat diff.txt
              printf "%-42s ... NOK\n" $file
              code=1
            fi
            rm diff.txt || true # we don't fail if the file does not exist
          done;
          exit $code
  make-httpd-maintainer-mode:
    runs-on: ubuntu-latest
    container:
      image: quay.io/mod_cluster/ci-httpd-dev
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: |
          cd native
          for module in advertise/ mod_*; do \
            cd $module; \
            sh buildconf; \
            ./configure  --with-apxs=/usr/local/apache2/bin/apxs; \
            make || exit 1; \
            cd ..; \
          done;

